{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {\n    this.currentThemeSubject = new BehaviorSubject('light');\n    this.currentTheme$ = this.currentThemeSubject.asObservable();\n  }\n  updateTheme(theme) {\n    this.currentThemeSubject.next(theme);\n  }\n  toggleTheme() {\n    this.currentTheme$ = this.currentTheme === 'light' ? 'dark' : 'light';\n    this.themeService.updateTheme(this.currentTheme);\n  }\n}\nThemeService.ɵfac = function ThemeService_Factory(t) {\n  return new (t || ThemeService)();\n};\nThemeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ThemeService,\n  factory: ThemeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,YAAY;EAGvBC;IAFQ,wBAAmB,GAA4B,IAAIF,eAAe,CAAS,OAAO,CAAC;IACpF,kBAAa,GAAuB,IAAI,CAACG,mBAAmB,CAACC,YAAY,EAAE;EAClE;EAETC,WAAW,CAACC,KAAa;IAC9B,IAAI,CAACH,mBAAmB,CAACI,IAAI,CAACD,KAAK,CAAC;EACtC;EAEAE,WAAW;IACT,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,YAAY,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrE,IAAI,CAACC,YAAY,CAACN,WAAW,CAAC,IAAI,CAACK,YAAY,CAAC;EAClD;;AAZWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["BehaviorSubject","ThemeService","constructor","currentThemeSubject","asObservable","updateTheme","theme","next","toggleTheme","currentTheme$","currentTheme","themeService","factory","providedIn"],"sourceRoot":"","sources":["D:\\MDB5-Angular-UI-KIT-Free-4.1.0\\mdb5-ng\\zips\\MDB5-ANGULAR-UI-KIT-Free\\src\\app\\theme.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private currentThemeSubject: BehaviorSubject<string> = new BehaviorSubject<string>('light');\n  public currentTheme$: Observable<string> = this.currentThemeSubject.asObservable();\n  constructor() { }\n\n  public updateTheme(theme: string): void {\n    this.currentThemeSubject.next(theme);\n  }\n  \n  toggleTheme(): void {\n    this.currentTheme$ = this.currentTheme === 'light' ? 'dark' : 'light';\n    this.themeService.updateTheme(this.currentTheme);\n  }\n\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}